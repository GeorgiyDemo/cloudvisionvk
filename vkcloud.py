import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.utils import get_random_id

import imageprocessing

#def write_msg(user_id, message):
#    vk.method('messages.send', {'user_id': user_id, 'random_id': get_random_id(), 'message': message})


class MainClass():
    def __init__(self):
        # API-–∫–ª—é—á —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ
        token = ""
        # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
        self.vk = vk_api.VkApi(token=token)
        self.processing()

    def get_url(self, message_id):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è url –∏–∑–æ–±—Ä–∂–µ–Ω–∏—è –∏–∑ id —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        #–ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω—å–∫—É –ø–æ –º–µ—Ç–æ–¥—É
        r = self.vk.method('messages.getById', {'message_ids': message_id})["items"]
        #–ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ä–∞–∑–º–µ—Ä—ã —Ñ–æ—Ç–æ—á–∫–∏
        all_sizes = r[0]["attachments"][0]["photo"]["sizes"]

        #–í —Ü–∏–∫–ª–µ –ø–æ –∫–∞–∂–¥–æ–π –∏—â–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        height, width, index = 0, 0, 0
        for i in range(len(all_sizes)):
            if all_sizes[i]["width"] > width and all_sizes[i]["height"] > height:
                height = all_sizes[i]["height"]
                width = all_sizes[i]["width"]
                index = i
        
        #–û–±—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É
        url = all_sizes[index]["url"]

        #–ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ (—Ç.–∫. –æ–Ω —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π)
        return url

    def processing(self):
        """
        –ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        # –†–∞–±–æ—Ç–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        longpoll = VkLongPoll(self.vk)

        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        for event in longpoll.listen():

            # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if event.type == VkEventType.MESSAGE_NEW:

                # –ï—Å–ª–∏ –æ–Ω–æ –∏–º–µ–µ—Ç –º–µ—Ç–∫—É –¥–ª—è –±–æ—Ç–∞
                if event.to_me:
                    msg_id = event.message_id
                    
                    attachments = event.attachments
                    if attachments != {} and attachments["attach1_type"] == "photo":
                        url = self.get_url(msg_id)
                        obj = imageprocessing.PhotoProcessing(url)


                        #url = attachments["attach1"]
                        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                        """
                        server_url = api.photos.getMessagesUploadServer(peer_id=chat_longpoll,v=APIVersion)["upload_url"]
                            thisfilename = getfile(photo_json[keyname])
                            message_final = objects_formater(localize_objects(thisfilename))
                                photo_response = requests.post(server_url,files={'photo': open(thisfilename, 'rb')}).json()
                                photo_final = api.photos.saveMessagesPhoto(photo=photo_response["photo"],server=photo_response["server"],hash=photo_response["hash"],v=APIVersion)[0]
                                photo_str = "photo"+str(photo_final["owner_id"])+"_"+str(photo_final["id"])
                                if message_final == "":
                                    api.messages.send(user_id=chat_longpoll,message="–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–æ—Ç–æ\n–ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ üëÄ",v=APIVersion)
                                else:
                                    api.messages.send(user_id=chat_longpoll,message="–í–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n"+message_final+"\n–•–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º —Ñ–æ—Ç–æ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ?",attachment=photo_str,keyboard=json.dumps(request_keyboard,ensure_ascii=False),v=APIVersion)
                                    main_obj[chat_longpoll]=[thisfilename, message_final]
                        """

if __name__ == "__main__":
    MainClass()